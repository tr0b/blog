<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Abelson on Pas Thomas</title>
    <link>//localhost:1314/fr/tags/abelson/</link>
    <description>Recent content in Abelson on Pas Thomas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <copyright>Â© 2024 Thomas</copyright>
    <lastBuildDate>Mon, 08 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="//localhost:1314/fr/tags/abelson/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>No SICP Preparation</title>
      <link>//localhost:1314/fr/posts/no-sicp-preparation/</link>
      <pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1314/fr/posts/no-sicp-preparation/</guid>
      <description>&lt;p&gt;Wanting to dive deeper into computer science concepts (maybe because I don&amp;rsquo;t want to be stuck just being a full stack dev forever), I went ahead and put my questionable foundations to the test, by returning to the acclaimed computer science book &lt;code&gt;Structure and Interpretation of Computer Programs&lt;/code&gt;, by the reknowned authors Harry Abelson and Gerald Jay Sussman. Initially though, the book first caught my attention more than three years ago, but I excused myself from reading it out of pure Dunning Krugger instinct and not feeling the need to learn much more about computers, even though I work daily with them.&lt;/p&gt;
&lt;p&gt;This blog is also a main motivator to pursue a better understanding of the concepts the authors presented, as part of the curriculum of computer science undergraduates at the Massachussets Institute of Technology (MIT). Not only because it will serve as a journal, but because it also gives me a sense of accountability, by having to actually sit down, read, not procrastinate and learn about the concepts shared in the book.&lt;/p&gt;
&lt;p&gt;I researched all across the web, and with the old shelved copy I possess of this book, I rapidly skimmed through the concepts. It was clear to me that the following were very important for throughly understanding what this book is about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Algebra&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Pre-Calculus&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; A basic knowledge of Scheme (a Lisp dialect)&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
  </channel>
</rss>
